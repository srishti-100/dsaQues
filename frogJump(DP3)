#include <bits/stdc++.h> 
//memoization
/*
int helper(int i, int n,vector<int>& dp, vector<int>& heights){
    if(i==n-1){
        return 0;
    }
    if(dp[i]!=-1) return dp[i];
    int ans1 = abs(heights[i]-heights[i+1])+helper(i+1,n,dp,heights);
    int ans2 = (i+2>=n)?INT_MAX:(abs(heights[i]-heights[i+2])+helper(i+2,n,dp,heights));
    dp[i]=min(ans1,ans2);
    return dp[i];
}

int frogJump(int n, vector<int> &heights)
{
    vector<int> dp(n,-1);
    return helper(0,n,dp,heights);


}
*/
int frogJump(int n, vector<int> &heights)
{
    vector<int> dp(n,-1);
    dp[0]=0;
    dp[1]=abs(heights[0]-heights[1]);
    for(int i =2; i<n; i++){
        int ans1 = abs(heights[i]-heights[i-1])+dp[i-1];
        int ans2 = abs(heights[i]-heights[i-2])+dp[i-2];
        dp[i]=min(ans1,ans2);
    }
    return dp[n-1];

}
